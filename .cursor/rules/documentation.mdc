---
globs: **/*.jsx, **/*.js
alwaysApply: false
---
# 文書化ルール

## 日本語JSDocコメント必須要件

### 必須対象
以下すべてに詳細な日本語JSDocコメントを追加:
- すべての関数とメソッド
- すべてのReactコンポーネント
- すべてのカスタムフック
- すべてのサービスクラスとメソッド
- すべてのユーティリティ関数
- すべての定数と設定オブジェクト

### フォーマット要件
- `/**` JSDoc形式のコメントを使用
- 目的と機能の詳細な日本語説明を含める
- すべてのパラメータに日本語説明付き `@param` タグを追加
- 戻り値に日本語説明付き `@returns` タグを追加
- 複雑なロジック、アルゴリズム、実装詳細を説明
- 関連する使用例や重要な注意事項を含める

### 文書化例

#### Reactコンポーネント
```javascript
/**
 * セグメントアイテムコンポーネント
 * 個別のテキストセグメントを表示し、ドラッグ&ドロップと編集機能を提供
 *
 * 主な機能:
 * - テキスト内容の直接編集
 * - ドラッグ&ドロップによる並び替え
 * - 削除・複製操作
 * - リアルタイム変数補間プレビュー
 *
 * @param {Object} props - コンポーネントのプロパティ
 * @param {string} props.text - セグメントのテキスト内容
 * @param {number} props.index - セグメントのインデックス
 * @param {Function} props.onUpdate - テキスト更新時のコールバック関数
 * @param {Function} props.onDelete - 削除時のコールバック関数
 * @returns {JSX.Element} セグメントアイテムのJSX要素
 */
```

#### カスタムフック
```javascript
/**
 * ローカルストレージ管理フック
 * アプリケーションデータのlocalStorageへの永続化とリアルタイム同期を管理
 *
 * 機能詳細:
 * - データの自動保存（状態変更時即座に実行）
 * - JSONシリアライゼーション/デシリアライゼーション
 * - エラーハンドリング（localStorage無効時の代替処理）
 * - 初期データ読み込みとデフォルト値の設定
 *
 * @param {string} key - localStorageのキー名
 * @param {any} defaultValue - 初期デフォルト値
 * @returns {[any, Function]} [現在の値, 値更新関数]のタプル
 */
```

#### ユーティリティ関数
```javascript
/**
 * 日付フォーマット関数
 * カスタム形式文字列を使用して日付オブジェクトを文字列に変換
 *
 * サポート形式:
 * - YYYY: 4桁年
 * - MM: 2桁月（ゼロ埋め）
 * - DD: 2桁日（ゼロ埋め）
 * - HH: 2桁時（ゼロ埋め、24時間制）
 * - mm: 2桁分（ゼロ埋め）
 * - ss: 2桁秒（ゼロ埋め）
 *
 * @param {Date} date - フォーマット対象の日付オブジェクト
 * @param {string} format - フォーマット形式文字列（例: "YYYY年MM月DD日 HH:mm"）
 * @returns {string} フォーマット済み日付文字列
 * @throws {Error} 無効な日付オブジェクトが渡された場合
 */
```

### 品質基準
- **具体性**: 曖昧な説明ではなく、具体的な動作と目的を記述
- **完全性**: すべてのパラメータ、戻り値、例外処理を文書化
- **実用性**: 実際の使用例や注意点を含める
- **最新性**: コード変更時は文書も必ず更新

### 既存コードベースとの一貫性
- `src/` ディレクトリ内の既存ファイルはすべて包括的な日本語文書化済み
- 新しいコード追加時は既存パターンと同レベルの詳細度を維持
- 既存文書化スタイルとの一貫性を保つ

この文書化標準により、コードの保守性を確保し、開発者がコードベースを効率的に理解できるようにします。